"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamoDBManager = void 0;
const aws_sdk_1 = require("aws-sdk");
class DynamoDBManager {
    constructor() {
        this.WCU_RATE_LIMITING_SLEEP = 2000;
        this.BATCH_MAXIMUM_SIZE = 25;
        this.ddb = new aws_sdk_1.DynamoDB.DocumentClient();
    }
    async putRateLimitedBatch(batchArray, tableName) {
        return new Promise(resolve => {
            console.log(`Batch writing: ${JSON.stringify(batchArray)}`);
            try {
                this.putBatch(batchArray, tableName).then(() => {
                    setTimeout(() => {
                        resolve();
                    }, this.WCU_RATE_LIMITING_SLEEP);
                });
            }
            catch (error) {
                console.error(error);
                throw error;
            }
        });
    }
    ;
    async putBatch(batchArray, tableName) {
        const params = {
            RequestItems: {
                [tableName]: batchArray
            }
        };
        try {
            await this.ddb.batchWrite(params).promise();
        }
        catch (error) {
            console.error(error);
            throw error;
        }
    }
}
exports.DynamoDBManager = DynamoDBManager;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGRiLW1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZGItbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxxQ0FBbUM7QUFFbkMsTUFBYSxlQUFlO0lBTXhCO1FBSGlCLDRCQUF1QixHQUFHLElBQUksQ0FBQztRQUNoQyx1QkFBa0IsR0FBRyxFQUFFLENBQUM7UUFHcEMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLGtCQUFRLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDN0MsQ0FBQztJQUVNLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxVQUFpQixFQUFFLFNBQWlCO1FBQ2pFLE9BQU8sSUFBSSxPQUFPLENBQU8sT0FBTyxDQUFDLEVBQUU7WUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7WUFFNUQsSUFBSTtnQkFDQSxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO29CQUMzQyxVQUFVLENBQUMsR0FBRyxFQUFFO3dCQUNaLE9BQU8sRUFBRSxDQUFDO29CQUNkLENBQUMsRUFBRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztnQkFDckMsQ0FBQyxDQUFDLENBQUM7YUFDTjtZQUFDLE9BQU8sS0FBSyxFQUFFO2dCQUNaLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3JCLE1BQU0sS0FBSyxDQUFDO2FBQ2Y7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFBQSxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQVEsQ0FBQyxVQUFpQixFQUFFLFNBQWlCO1FBQ3ZELE1BQU0sTUFBTSxHQUFHO1lBQ1gsWUFBWSxFQUFFO2dCQUNWLENBQUMsU0FBUyxDQUFDLEVBQUUsVUFBVTthQUMxQjtTQUNKLENBQUM7UUFFRixJQUFJO1lBQ0EsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUMvQztRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyQixNQUFNLEtBQUssQ0FBQztTQUNmO0lBQ0wsQ0FBQztDQUNKO0FBekNELDBDQXlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtb0RCIH0gZnJvbSBcImF3cy1zZGtcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBEeW5hbW9EQk1hbmFnZXIge1xyXG4gICAgcHJpdmF0ZSBkZGI6IER5bmFtb0RCLkRvY3VtZW50Q2xpZW50O1xyXG5cclxuICAgIHByaXZhdGUgcmVhZG9ubHkgV0NVX1JBVEVfTElNSVRJTkdfU0xFRVAgPSAyMDAwO1xyXG4gICAgcHVibGljIHJlYWRvbmx5IEJBVENIX01BWElNVU1fU0laRSA9IDI1O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuZGRiID0gbmV3IER5bmFtb0RCLkRvY3VtZW50Q2xpZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzeW5jIHB1dFJhdGVMaW1pdGVkQmF0Y2goYmF0Y2hBcnJheTogYW55W10sIHRhYmxlTmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgQmF0Y2ggd3JpdGluZzogJHtKU09OLnN0cmluZ2lmeShiYXRjaEFycmF5KX1gKTtcclxuXHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnB1dEJhdGNoKGJhdGNoQXJyYXksIHRhYmxlTmFtZSkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCB0aGlzLldDVV9SQVRFX0xJTUlUSU5HX1NMRUVQKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBwcml2YXRlIGFzeW5jIHB1dEJhdGNoKGJhdGNoQXJyYXk6IGFueVtdLCB0YWJsZU5hbWU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHtcclxuICAgICAgICAgICAgUmVxdWVzdEl0ZW1zOiB7XHJcbiAgICAgICAgICAgICAgICBbdGFibGVOYW1lXTogYmF0Y2hBcnJheVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5kZGIuYmF0Y2hXcml0ZShwYXJhbXMpLnByb21pc2UoKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==